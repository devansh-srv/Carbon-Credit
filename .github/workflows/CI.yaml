name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [smart-contracts, backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (for Smart Contracts & Frontend)
        if: matrix.component == 'smart-contracts' || matrix.component == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python (for Backend)
        if: matrix.component == 'backend'
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        if: matrix.component == 'smart-contracts'
        run: |
          cd SmartContracts
          npm ci

      - name: Compile and test Smart Contracts
        if: matrix.component == 'smart-contracts'
        run: |
          cd SmartContracts
          npx hardhat compile
          npx hardhat test

      - name: Install backend dependencies
        if: matrix.component == 'backend'
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Backend tests
        if: matrix.component == 'backend'
        run: |
          cd backend
          python -m unittest discover

      - name: Install Frontend dependencies
        if: matrix.component == 'frontend'
        run: |
          cd client
          npm ci

      - name: Run Frontend tests
        if: matrix.component == 'frontend'
        run: |
          cd client
          npm test -- --watchAll=false

      - name: Build Frontend
        if: matrix.component == 'frontend'
        run: |
          cd client
          npm run build

